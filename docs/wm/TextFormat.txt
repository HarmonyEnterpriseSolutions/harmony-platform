Позволяет заполнять текстовые шаблоны данными из словаря.

Форматирование основано на python String Formatting Operations 

http://www.python.org/doc/2.5.4/lib/typesseq-strings.html

Пример простейшего форматирования

"Hello %(key)s" % { 'key' : 'world' }

слово с ключом key из словаря вставится на место поля %(key)s

Формат внутри скобок несколько усложнен:

%( [ <maping-key> ] [ :<convertor-name N> [ {<convertor-args N>} ] ]* )<suffix>

где 
	<maping-key> - ключ в словаре
	<convertor-name N> - имя конвертора
	<convertor-args> - это список аргументов конвертора, через запятую, на языке питон.
	Пока используются только строковые, целые и булевские аргументы.

Примечания: 
	[] означает опциональность того, что внутри скобок. 
	[]* означает повтор, 0 или более раз, того, что внутри скобок. 
	пробелы введены для читабельности

Наряду с ключом, введена цепочка конверторов.
Конвертор - это функция от значения и списка других константных параметров, которая 
возвращает измененное значение, или выбрасывает исключение YieldValue, но об этом ниже.

Пример функции конвертора, описан конвертор с именем date и одним опциональным параметром format:

def date(value, format='%x'):
	if value is None:
		raise YieldValue('Пустая дата')
	if value is NotImplemented:
		raise YieldValue('Ключа нет в резултсете'), NotImplemented):
	return value.strftime(format)

Вызов этого конвертора будет выглядеть так

"Дата документа %(doc_date:date)s, год документа %(doc_date:date{'%Y'})s"

Изменения и дополнения к формату:

1. Скобки после '%' обязательны, позиционное форматирование не предполагается.
2. <maping-key> стал опциональным, его отсутствие равносильно значению None в словаре.
3. Если ключ в словаре отсутствует, это равносильно значению NotImplemented в словаре.
4. Добавлена цепочка конверторов.

